{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":"","sourcesContent":["import { IOptions } from './txt2epub3';\nimport { EpubMaker } from 'epub-maker2';\nimport { EpubStore } from './store';\nimport { IAttachMetaData, IEpubRuntimeReturn } from './epub';\nimport MarkdownIt = require('markdown-it');\nimport { ITSResolvable, ITSPartialWith, ITSUnpackedPromiseLike, ITSRequiredWith } from 'ts-type';\nimport Bluebird = require('bluebird');\n\nexport interface IInternalProcessOptions\n{\n\tstore: EpubStore,\n\tepub: EpubMaker,\n\tepubOptions: IOptions,\n\tcwd: string,\n\tcwdRoot: string,\n}\n\nexport interface IInternalProcessContextOptions extends IInternalProcessOptions\n{\n\tvid: string,\n\tattach: IAttachMetaData,\n}\n\nexport interface IMdEnv\n{\n\ttitle?: string,\n\t[k: string]: unknown,\n}\n\nexport interface IInternalProcessMarkdownItOptions extends Partial<IInternalProcessContextOptions>\n{\n\tmdOptions?: MarkdownIt.Options,\n\tmd?: MarkdownIt,\n\tmdEnv?: IMdEnv,\n}\n\nexport interface IInternalProcessVolumeOptions extends Omit<IInternalProcessOptions, 'cwd'>\n{\n\tprocessReturn: Partial<IEpubRuntimeReturn>,\n\tcwd?: string,\n}\n\nexport interface IInternalProcessEpubOptions extends IInternalProcessOptions\n{\n\tprocessReturn: IEpubRuntimeReturn,\n}\n\nexport type IResolvableBluebird<T> = ITSResolvable<T> | Bluebird<T>\n\n"]}