{"version":3,"file":"tags.js","sourceRoot":"","sources":["tags.ts"],"names":[],"mappings":"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","sourcesContent":["import _zhRegExp from 'regexp-cjk';\nimport createZhRegExpPlugin from 'regexp-cjk-plugin-extra';\nimport { console } from './log';\nimport { toHalfWidth } from 'str-util';\n\nconst zhRegExp = _zhRegExp.use({\n\ton: [\n\t\tcreateZhRegExpPlugin({\n\t\t\tautoFullHaif: true,\n\t\t})\n\t],\n});\n\nexport const allowedHtmlTagList = [\n\t's',\n\t'ruby',\n\t'i',\n\t'b',\n\t'sup',\n\t'sub',\n] as const;\n\nexport const enum EnumHtmlTag\n{\n\tOPEN = '&lt;|\\\\u003C|＜',\n\tCLOSE = '&gt;|\\\\u003E|＞',\n}\n\nexport const reTxtImgTag = new zhRegExp(`[(（](?:插圖|圖片|插畫|画像|圖像)([a-z0-9ａ-ｚ０-９_―——─－一─——－\\u2E3A\\u0332\\u0331\\u02CD﹘\\\\-]+)[)）]`, 'iug', {\n\tgreedyTable: 2,\n});\n\nexport const reTxtHtmlTag = createHtmlTagRe(allowedHtmlTagList);\nexport const reHtmlRubyRt = createHtmlTagRe(['rt']);\nexport const reHtmlRubyRp = createHtmlTagRe(['rp']);\n\nexport const reHtmlTagOpen = new zhRegExp(EnumHtmlTag.OPEN, 'igu');\nexport const reHtmlTagClose = new zhRegExp(EnumHtmlTag.CLOSE, 'igu');\n\nexport const reHtmlAttr = new zhRegExp(`(?<=(?:[\\\\s 　]+))([\\\\wａ-ｚ０-９]+)(?:＝|═|=)([#＃\\\\wａ-ｚ０-９]+)`, 'iug', {\n\tgreedyTable: 2,\n});\n\nif (0)\n{\n\tconsole.dir({\n\t\treTxtImgTag,\n\t\treTxtHtmlTag,\n\t\treHtmlRubyRt,\n\t\treHtmlRubyRp,\n\t\treHtmlTagOpen,\n\t\treHtmlTagClose,\n\t\treHtmlAttr,\n\t});\n}\n\nexport function createHtmlTagRe(allowedHtmlTagList: string[] | readonly string[])\n{\n\treturn new zhRegExp(`(?:${EnumHtmlTag.OPEN})(${allowedHtmlTagList.join('|')})((?:\\\\s+[\\\\w \\\\t＝═=ａ-ｚ０-９]*?)?)(?:${EnumHtmlTag.CLOSE})([^\\\\n]*?)(?:${EnumHtmlTag.OPEN})(?:(?:\\\\/|／)\\\\1)(?:${EnumHtmlTag.CLOSE})`, 'iug', {\n\t\tgreedyTable: 2,\n\t})\n}\n\nexport function _convertHtmlTag001(input: string)\n{\n\treturn input\n\t\t.replace(new RegExp(EnumHtmlTag.OPEN, 'ig'), '<')\n\t\t.replace(new RegExp(EnumHtmlTag.CLOSE, 'ig'), '>')\n\t\t;\n}\n\nexport function _fixRubyInnerContext(innerContext: string)\n{\n\treturn innerContext\n\t\t.replace(reHtmlRubyRt, _replaceHtmlTag(($0, $1, $2, $3) => {\n\t\t\treturn `<${$1}${$2}>${$3}</${$1}>`\n\t\t}))\n\t\t.replace(reHtmlRubyRp, _replaceHtmlTag(($0, $1, $2, $3) => {\n\t\t\treturn `<${$1}${$2}>${$3}</${$1}>`\n\t\t}))\n\t;\n}\n\nexport function _replaceHtmlTag(replacer: ((substring: string, ...args: string[]) => string))\n{\n\treturn ($0: string, $1: string, $2: string, ...argv: string[]) => {\n\n\t\t$1 = toHalfWidth($1);\n\t\t$2 = toHalfWidth($2);\n\n\t\treturn replacer($0, $1, $2, ...argv)\n\t}\n}\n"]}