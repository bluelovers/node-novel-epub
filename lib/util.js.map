{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAIH,mDAAsD;AAoB7C,qBApBA,iBAAU,CAoBA;AAnBnB,qDAA4D;AAC5D,+BAAgC;AAChC,+CAAuC;AAEvC,2CAAkC;AAClC,uCAAuC;AAE1B,QAAA,OAAO,GAAG,IAAI,sBAAO,CAAC,IAAI,EAAE;IACxC,OAAO,EAAE,IAAI;IACb,cAAc,EAAE;QACf,MAAM,EAAE,IAAI;KACZ;IACD,YAAY,EAAE;QACb,OAAO,EAAE,IAAI;KACb;CACD,CAAC,CAAC;AAEH,eAAO,CAAC,YAAY,GAAG,IAAI,CAAC;AAI5B,6CAA6C;AAC7C,GAAG;AACH,uDAAuD;AACvD,GAAG;AAEH,MAAM,WAAW,GAAG,IAAI,oBAAQ,CAAC,yCAAyC,EAAE,IAAI,EAAE;IACjF,WAAW,EAAE,CAAC;CACd,CAAC,CAAC;AAEH,SAAgB,UAAU,CAAC,GAAW;IAErC,OAAO,uEAAuE,GAAG,kCAAkC,CAAC;AACrH,CAAC;AAHD,gCAGC;AAED,SAAgB,QAAQ,CAAC,GAAG,EAAE,QAE7B;IAEA,MAAM,EAAE,MAAM,GAAG,EAAqB,EAAE,GAAG,QAAQ,IAAI,EAAE,CAAC;IAC1D,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,EAAqB,CAAC;IAEnD,OAAO,CACN,OAAO;QACP,GAAG;aACD,QAAQ,EAAE;aACV,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC;aAElC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;aAC1B,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;aAE1B,OAAO,CAAC,uBAAuB,EAAE,UAAU,GAAG,CAAC;YAE/C,iBAAiB;YAEjB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,wBAAwB,CAAC;QAC7D,CAAC,CAAC;aAED,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE;YAE/B,IAAI,MAAM,IAAI,EAAE,EAChB;gBACC,EAAE,GAAG,sBAAW,CAAC,EAAE,CAAC,CAAC;gBAErB,IAAI,MAAM,CAAC,EAAE,CAAC,EACd;oBACC,OAAO,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC9B;aACD;YAED,OAAO,CAAC,CAAC;QACV,CAAC,CAAC;aAED,OAAO,CAAC,6BAA6B,EAAE,OAAO,CAAC;YAEhD,qFAAqF;aAEpF,OAAO,CAAC,KAAK,EAAE,eAAe,CAAC;UAC/B,QAAQ,CAAC;SAEV,OAAO,CAAC,qBAAqB,EAAE,sBAAsB,CAAC;SAEtD,OAAO,CAAC,gFAAgF,EAAE,wDAAwD,CAAC;SAEnJ,OAAO,CAAC,eAAe,EAAE,2CAA2C,CAAC;SACrE,OAAO,CAAC,QAAQ,EAAE,kCAAkC,CAAC,CACrD;AACH,CAAC;AApDD,4BAoDC;AAED;;GAEG;AACH,SAAgB,wBAAwB,CAAC,IAAqB;IAE7D,OAAO,8BAAY,CAAC,IAAI,EAAE;QACzB,mBAAmB;QACnB,KAAK,EAAE,KAAK;QACZ,iBAAiB;QACjB,aAAa,EAAE,IAAI;KACnB,CAAC,CAAC;AACJ,CAAC;AARD,4DAQC;AAED,SAAgB,qBAAqB,CAAC,IAAY;IAEjD,OAAO,wBAAwB,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AACxD,CAAC;AAHD,sDAGC;AAED,SAAgB,0BAA0B,CAAC,IAAY;IAEtD,OAAO,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;AACzD,CAAC;AAHD,gEAGC","sourcesContent":["/**\n * Created by user on 2018/2/18/018.\n */\n\nimport getUuidByString = require('uuid-by-string');\nimport { crlf } from 'crlf-normalize';\nimport { createUUID } from 'epub-maker2/src/lib/uuid';\nimport { IMdconfMeta, mdconf_parse } from 'node-novel-info';\nimport fs = require('fs-iconv');\nimport { Console } from 'debug-color2';\nimport { IAttachMetaData } from './epub';\nimport zhRegExp from 'regexp-cjk';\nimport { toHalfWidth } from 'str-util';\n\nexport const console = new Console(null, {\n\tenabled: true,\n\tinspectOptions: {\n\t\tcolors: true,\n\t},\n\tchalkOptions: {\n\t\tenabled: true,\n\t},\n});\n\nconsole.enabledColor = true;\n\nexport { createUUID }\n\n//export function createUUID(input?: unknown)\n//{\n//\treturn getUuidByString(String(input)).toLowerCase();\n//}\n\nconst reTxtImgTag = new zhRegExp(`[(（](?:插圖|圖片|插畫)([a-z0-9ａ-ｚ０-９_-]+)[)）]`, 'ug', {\n\tgreedyTable: 2,\n});\n\nexport function novelImage(src: string)\n{\n\treturn `<figure class=\"fullpage ImageContainer page-break-before\"><img src=\"${src}\" class=\"inner-image\"/></figure>`;\n}\n\nexport function splitTxt(txt, plusData?: {\n\tattach?: IAttachMetaData\n})\n{\n\tconst { attach = {} as IAttachMetaData } = plusData || {};\n\tconst { images } = attach || {} as IAttachMetaData;\n\n\treturn (\n\t\t'<div>' +\n\t\ttxt\n\t\t\t.toString()\n\t\t\t.replace(/\\r\\n|\\r(?!\\n)|\\n/g, \"\\n\")\n\n\t\t\t.replace(/\\u003C/g, '&lt;')\n\t\t\t.replace(/\\u003E/g, '&gt;')\n\n\t\t\t.replace(/&lt;(img.+?)\\/?&gt;/gm, function (...m)\n\t\t\t{\n\t\t\t\t//console.log(m);\n\n\t\t\t\treturn `<${m[1].replace(/\\/+$/, '')} class=\"inner-image\"/>`;\n\t\t\t})\n\n\t\t\t.replace(reTxtImgTag, (s, id) => {\n\n\t\t\t\tif (images && id)\n\t\t\t\t{\n\t\t\t\t\tid = toHalfWidth(id);\n\n\t\t\t\t\tif (images[id])\n\t\t\t\t\t{\n\t\t\t\t\t\treturn novelImage(images[id]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn s;\n\t\t\t})\n\n\t\t\t.replace(/^[ ]*[－＝\\-—\\=─–]{3,}[ ]*$/mg, '<hr/>')\n\n\t\t\t//.replace(/^([－＝\\-—\\=─═─＝=══－\\-─—◆◇]+)$/mg, '<span class=\"overflow-line\">$1</span>')\n\n\t\t\t.replace(/\\n/g, '</div>\\n<div>')\n\t\t+ '</div>')\n\n\t\t.replace(/<div><hr\\/><\\/div>/g, '<hr class=\"linehr\"/>')\n\n\t\t.replace(/<div>[ ]*([－＝—=─═─＝=══－\\-─—～◆◇\\*＊\\+＊＊↣◇◆☆★■□☆◊▃\\p{Punctuation}]+)[ ]*<\\/div>/ug, '<div class=\"linegroup calibre1 overflow-line\">$1</div>')\n\n\t\t.replace(/<div><\\/div>/g, '<div class=\"linegroup softbreak\">　 </div>')\n\t\t.replace(/<div>/g, '<div class=\"linegroup calibre1\">')\n\t\t;\n}\n\n/**\n * 讀取不標準的 mdconf\n */\nexport function parseLowCheckLevelMdconf(data: string | Buffer)\n{\n\treturn mdconf_parse(data, {\n\t\t// 當沒有包含必要的內容時不產生錯誤\n\t\tthrow: false,\n\t\t// 允許不標準的 info 內容\n\t\tlowCheckLevel: true,\n\t});\n}\n\nexport function fsLowCheckLevelMdconf(file: string)\n{\n\treturn parseLowCheckLevelMdconf(fs.readFileSync(file));\n}\n\nexport function fsLowCheckLevelMdconfAsync(file: string)\n{\n\treturn fs.readFile(file).then(parseLowCheckLevelMdconf);\n}\n\n"]}